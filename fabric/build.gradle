plugins {
    id 'com.gradleup.shadow' version '9.0.0-beta2'
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionFabric')

    modImplementation "net.fabricmc:fabric-loader:$project.fabric_loader_version"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    modImplementation "dev.architectury:architectury-fabric:$project.architectury_api_version"

    modLocalRuntime "maven.modrinth:modmenu:7.2.2"
    //modLocalRuntime "maven.modrinth:chunk-debug:2.1.2+1.21.1"
    //modImplementation "maven.modrinth:porting_lib:2.3.2+1.20.1"
    //modImplementation "maven.modrinth:create-fabric:0.5.1-f-build.1417+mc1.20.1"

}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
